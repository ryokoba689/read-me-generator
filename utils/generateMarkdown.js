const githubLink = 'https://github.com/Ryokoba689/READMe-Generator';

const emailInstructions = async (instructions, email) => {
  if (instructions === 'none') return (
    `##Contact 
Email: ${email}<br /><br />`);
  return (`## Contact 
${instructions}<br /> 
Email: ${email}<br /><br />`);
};

// TODO: Create a function that returns a license badge based on which license is passed in
// If there is no license, return an empty string
const renderLicenseBadge = async (license) => {
  let badge = ``;
  switch (license) {
  case 'Apache':
    badge = `[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)]`
    break;
  case 'MIT':
    badge = `[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)]`
    break;
  case 'Mozilla':
    badge = `[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)]`
    break;
  case 'GNU':
    badge = `[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)]`
    break;
  case 'None':
    break;
  default:
    break;
}
  return badge;
}

// TODO: Create a function that returns the license link
// If there is no license, return an empty string
const renderLicenseLink = async (license) => {
  let link = ``;
  switch (license) {
  case 'Apache':
    link = `(https://opensource.org/licenses/Apache-2.0)`
    break;
  case 'MIT':
    link = `(https://opensource.org/licenses/MIT)`
    break;
  case 'Mozilla':
    link = `(https://opensource.org/licenses/MPL-2.0)`
    break;
  case 'GNU':
    link = `(https://www.gnu.org/licenses/gpl-3.0)`
    break;
  case 'None':
    return link;
  default:
    return link;
  }
  return link;
};

const renderContributorsSections = async (contributors, username, validation) => {
  let list = [];
  if (validation === 'done' && contributors.length === 0) { 
    return (`## Contributors
${username} <br />`);
  };

  contributors.forEach(element => {
    list.push (`${element} -- https://github.com/${element} <br />`
  )});

    return (`## Contributors
${username} <br /> 
${list}`);
}
// TODO: Create a function that returns the license section of README
// If there is no license, return an empty string
const renderLicenseSection = async (license) => {
  if (license !== 'None') {
    const link = await renderLicenseLink(license);
    const badge = await renderLicenseBadge(license);
    return (`## License 
![${badge}] --- (${link}) <br />`);
  }
  return (`## License
No license was needed for this application. <br />`);
}
const licenseTitle = `- [License](#license)`;

// TODO: Create a function to generate markdown for README
const generateMarkdown = async (app, contributors) => {
  const contributorsSection = await renderContributorsSections(contributors, app.username, app.contributors)
  const licenseSection = await renderLicenseSection(app.license)
  const emailSection = await emailInstructions(app.instructions, app.email);
  return (
`# ${app.title}
## Description
${app.description} <br />
## Table of Contents
- [Description](#description)
- [Installation](#installation)
- [Usage](#usage)
- [Contributors](#contributors)
- [Tests](#tests)
${licenseTitle}
- [Contact](#contact) <br />
## Installation
${app.installation} <br />
## Usage
${app.usage} <br />
${licenseSection} 
${contributorsSection}
## Tests
${app.tests}<br />
${emailSection}
GitHub: [${app.username}](https://github.com/${app.username})<br />
<br />
This README was generated by [${githubLink}]`);
};

module.exports = generateMarkdown;
